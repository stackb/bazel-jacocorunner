# NOTE: this java_toolchain appears in its full non-macro glory here for the
# sake of being explicit (to see what's actually in it).  You can more
# succinctly create a java_toolchain+(native.)toolchain using the
# default_java_toolchain macro.

# config_setting(
#     name = "java17_version_setting",
#     values = {"java_language_version": "17"},
#     visibility = ["//visibility:private"],
# )

# toolchain(
#     name = "java17_toolchain",
#     target_settings = [":java17_version_setting"],
#     toolchain = ":java17",
#     toolchain_type = "@bazel_tools//tools/jdk:toolchain_type",
# )

# copied from `bazel query --output build
# @bazel_tools//tools/jdk:toolchain_java11` with different jacocorunner.
java_toolchain(
    name = "java11",
    bootclasspath = ["@bazel_tools//tools/jdk:platformclasspath"],
    forcibly_disable_header_compilation = False,
    genclass = ["@remote_java_tools//:GenClass"],
    header_compiler = ["@remote_java_tools//:TurbineDirect"],
    header_compiler_direct = ["@remote_java_tools//:TurbineDirect"],
    ijar = ["@bazel_tools//tools/jdk:ijar"],
    jacocorunner = "@remote_java_tools//:jacoco_coverage_runner_filegroup",
    java_runtime = "@bazel_tools//tools/jdk:remote_jdk11",
    javabuilder = ["@remote_java_tools//:JavaBuilder"],
    javac_supports_workers = True,
    jvm_opts = [
        "-XX:-CompactStrings",
        "--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.resources=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
        "--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
        "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
        "--add-opens=java.base/java.nio=ALL-UNNAMED",
        "--add-opens=java.base/java.lang=ALL-UNNAMED",
        "-Dsun.io.useCanonCaches=false",
    ],
    misc = [
        "-XDskipDuplicateBridges=true",
        "-XDcompilePolicy=simple",
        "-g",
        "-parameters",
        "-Xep:ReturnValueIgnored:OFF",
    ],
    reduced_classpath_incompatible_processors = ["dagger.hilt.processor.internal.root.RootProcessor"],
    singlejar = ["@bazel_tools//tools/jdk:singlejar"],
    source_version = "11",
    target_version = "11",
    turbine_jvm_opts = ["-XX:+UseParallelGC"],
)

config_setting(
    name = "java11_version_setting",
    values = {"java_language_version": "11"},
    visibility = ["//visibility:private"],
)

toolchain(
    name = "java11_toolchain",
    target_settings = [":java11_version_setting"],
    toolchain = ":java11",
    toolchain_type = "@bazel_tools//tools/jdk:toolchain_type",
)
